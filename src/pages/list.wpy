<style>
.ripple {
    background-color: rgba(0, 0, 0, 0.8);
    border-radius: 100%;
    height:10px;
    width:10px;
    margin-top: -90px;
    position: absolute;
    -webkit-transform: scale(0);
}
@-webkit-keyframes ripple {
    100% {
    -webkit-transform: scale(12);
    transform: scale(12);
    background-color: transparent;
    }
}
</style>

<template>
  <view class="page">
   <view class="weui-loadmore" wx:if="{{isLoading}}" >
            <view class="weui-loading"></view>
            <view class="weui-loadmore__tips">正在加载</view>
        </view>
    <!--页头-->
    <view class="page__hd" wx:if="{{items.length === 0}}" style="height:250px;">
        <!-- <view class="page__title">欢迎来到小推荐</view> -->
         <!-- <view class="page__desc">推荐，是一种美德，分享是一种态度。生活就是要有态度和美德。
           添加了推荐，这里显示的就是二维码。
         </view> -->
    </view>
   <view class="page__hd" wx:if="{{items.length !== 0}}">
        <view class="weui-flex" animation="{{animationData}}">
          <view class="weui-flex__item"  >
          <image style="display:flex;justify-content:center;width:auto !important;" mode="aspectFit"
            src="{{barcode ? (cdnDomain + barcode) : ''}}">
          </image>
          </view>
      </view>
    </view>
    <!--主体-->
    <view class="page__bd">

   <view class="weui-cells__title">推荐二维码列表</view>
        <view class="weui-cells weui-cells_after-title"  >
            <radio-group class="radio-group" >
            <repeat for="{{items}}" key="key" index="index" item="item">

              <view class="weui-cell weui-cell_access">
                  <view class="weui-cell__hd" hover-class="weui-cell_active" id="{{item._id}}"  >
                      <label class="radio" bindtap="radioChange({{item.barcode}})" data-barcode="{{item.barcode}}" >
                        <radio value="{{item.title}}" checked="{{item.checked}}" /></radio>
                        <image wx:if="{{item.images[0] && item.images[0].path}}" src="{{cdnDomain + item.images[0].path}}" style="margin-right: 5px;vertical-align: middle;width:20px; height: 20px;"></image>
                        <image wx:if="{{item.images[1] && item.images[1].path}}" src="{{cdnDomain + item.images[1].path}}" style="margin-right: 5px;vertical-align: middle;width:20px; height: 20px;"></image>
                        <image wx:if="{{item.images[2] && item.images[2].path}}" src="{{cdnDomain + item.images[2].path}}" style="margin-right: 5px;vertical-align: middle;width:20px; height: 20px;"></image>
                        {{item.title}}
                      </label>
                  </view>
                  <view class="weui-cell__bd"> </view>
                    <navigator url="/pages/add?id={{item._id}}" style="align-items:center;">
                      <view class="weui-cell__ft weui-cell__ft_in-access" style="vertical-align:middle;">
                        <!-- 9999 -->
                        <icon type="info_circle" size="16"></icon>
                        </view>
                    </navigator>
              </view>

            </repeat>
        </radio-group>
        </view>
    </view>
 <view class="page__bd page__bd_spacing">
    <navigator url="/pages/add?id=0"  hover-class="other-navigator-hover">
      <button class="weui-btn" type="default"> + 添加推荐 </button>
    </navigator>
    <!--没有页脚-->
     </view>
  </view>
</template>

<script>
import wepy from 'wepy'

// 通过继承自wepy.page的类创建页面逻辑
export default class TuijianList extends wepy.page {
  // 页面配置
  config = {
    navigationBarTitleText: '小鸟推荐'
  };

  // 可用于页面模板绑定的数据
  data = {
    isLoading: false,
    barcode: '',
    urlBase: '',
    cdnDomain: '',
    items: [
      // { name: 'test1', checked: true, key: 1 },
      // { name: 'test2', checked: false, key: 2 }
    ],
    animationData: {}
  };

  // 事件处理函数(集中保存在methods对象中)
  methods = {
    onShareAppMessage: (res) => {
      if (res.from === 'button') {
        // 来自页面内转发按钮
        console.log(res.target)
      }
      return {
        title: '小鸟推荐-分享是一种态度',
        path: '/pages/list',
        success: function(res) {
          // 转发成功
        },
        fail: function(res) {
          // 转发失败
        }
      }
    },
    radioChange: (barcode, e) => {
      console.log('radioChanged  new :', this.barcode, 'old:', barcode)
      this.barcode = barcode // e.target.dataset.barcode
      this.$apply()

      // this.rotateThenScale()
    }
  };

  async requestMyRecommendeds () {
    let self = this
    console.log('requestMyRecommendeds ing openid:', self.$parent.globalData.session.openid)
    return new Promise(function(resolve, reject) {
      wepy.request({
        url: self.$parent.globalData.config.apiList.recommended.get + '?userId=' + self.$parent.globalData.session.openid,
        fail: function(err) {
          console.log('requestMyRecommendeds error:', err)
          reject(err)
        }
      }).then(function (result) {
        console.log('requestMyRecommendeds request result:', result)
        self.items = result.data.data
        if (self.items.length > 0) {
          self.items[0].checked = true
          self.barcode = self.items[0].barcode
        }
        console.log('self.items loaded', self.items)
        self.$apply()
        resolve('load data OK')
      })
    })
  };

  async rotateThenScale () {
    let animation = wx.createAnimation({
      duration: 1000,
      timingFunction: 'ease'
    })

    animation.scale(1, 1).rotate(180).step()
    animation.rotate(0).scale(1, 1).step()
    // animation.rotate(180).step()
    this.animationData = animation.export()
    this.$apply()

    console.log('rotateThenScale done')
    return 'rotateThenScale OK'
  };

  // 页面的生命周期函数
  async onPullDownRefresh () {
    let self = this
    self.isLoading = true
    self.$apply()
    console.log('onPullDownRefresh')
    const state = await self.requestMyRecommendeds()
    console.log('load state:', state)
    wx.stopPullDownRefresh()
    setTimeout(() => {
      self.isLoading = false
      self.$apply()
    }, 1500)
    console.log('onPullDownRefresh end')
    return 'onPullDownRefresh'
  };

  async onShow () {

  };

  async onLoad() {
    let self = this
    console.log('self.$parent.globalData.config:', self.$parent.globalData.config)
    self.urlBase = self.$parent.globalData.config.urlBase
    self.cdnDomain = self.$parent.globalData.config.cdnDomain
    self.$apply()

    try {
      console.log('list login state:', await self.$parent.globalData.login())
    } catch (error) {
      console.log('list login error:', error)
    }

    console.log('list requestMyRecommendeds state:', await this.requestMyRecommendeds())
    this.rotateThenScale()
  };
}
</script>
